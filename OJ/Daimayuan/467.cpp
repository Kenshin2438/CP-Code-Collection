/* Generated by powerful Codeforces Tool
 * Author: Kenshin2438
 * Time: 2021-11-07 19:07:53
**/

#include <cstdio>
#include <cstring>
#include <cmath>
#include <ctime>
#include <cassert>

#include <algorithm>
#include <random>
#include <chrono>
#include <iostream>
#include <functional>
#include <bitset>
#include <vector>
#include <string>
#include <queue>
#include <stack>
#include <set>
#include <map>
#include <unordered_map>

#define PII pair<int, int>
#define vec vector
#define str string
#define fi first
#define se second
#define pb push_back
#define all(a) a.begin(), a.end()
using namespace std;

typedef long long ll;
typedef unsigned long long ull;

#define int ll

const int mod = 1e9 + 7;
const int N = 2e6 + 10;
// const int M = 2e3 + 10;
const int inf = 0x3f3f3f3f;
const ll  INF = 1e18;
const double eps = 1e-8;

int T;

int h, w, n;
PII p[N];
int fac[N], inv[N], dp[N];

void init(int m) {
  fac[0] = fac[1] = 1, inv[0] = inv[1] = 1;
  for (int i = 2; i <= m; i++) {
    fac[i] = 1LL * fac[i - 1] * i % mod;
    inv[i] = 1LL * (mod - mod / i) * inv[mod % i] % mod;
  }
  for (int i = 2; i <= m; i++) {
    inv[i] = 1LL * inv[i - 1] * inv[i] % mod;
  }
}

int C(int a, int b) {
  if (a < b || a < 0 || b < 0) return 0;
  return 1LL * fac[a] * inv[b] % mod * inv[a - b] % mod;
}

signed main() {
  ios_base::sync_with_stdio(false), cin.tie(0), cout.tie(0);
  cin >> h >> n, w = h;
  init((int) 2e6);
  for (int i = 1; i <= n; i++) {
    cin >> p[i].fi >> p[i].se;
  }
  sort(p + 1, p + 1 + n);
  for (int i = 1; i <= n; i++) {
    dp[i] = C(p[i].fi + p[i].se - 2, p[i].fi - 1);
    for (int j = 1; j < i; j++) {
      dp[i] = (dp[i] + mod - 1LL * dp[j] * C(p[i].fi - p[j].fi + p[i].se - p[j].se, p[i].fi - p[j].fi) % mod) % mod;
    }
  }
  int ans = C(h + w - 2, w - 1);
  for (int i = 1; i <= n; i++) {
    ans = (ans + mod - 1LL * dp[i] * C(h - p[i].fi + w - p[i].se, h - p[i].fi) % mod) % mod;
  }
  cout << ans;
  return 0;
}
